Terminals unused in grammar

    UNDEFINED


State 62 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program decl
    3        | decl

    4 decl: variableDecl
    5     | functionDecl
    6     | classDecl
    7     | interfaceDecl

    8 variableDecl: variable SEMICOLON

    9 variable: type T_ID
   10         | newType T_ID

   11 type: INT
   12     | DOUBLE
   13     | BOOL
   14     | STRING
   15     | type OPENBRACK CLOSEBRACK

   16 newType: T_ID

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR stmtBlock
   18             | VOID T_ID OPENPAR formals CLOSEPAR stmtBlock

   19 formals: variable1ToInfColon
   20        | %empty

   21 variable1ToInfColon: variable1ToInfColon COLON variable
   22                    | variable

   23 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

   24 extendsIdent0Or1: %empty
   25                 | EXTENDS T_ID

   26 implementsIdentPlusColon0Or1: %empty
   27                             | IMPLEMENTS ids1ToInfColon

   28 fields0ToInf: fields0ToInf field
   29             | %empty

   30 field: accessMode variableDecl
   31      | accessMode functionDecl

   32 ids1ToInfColon: ids1ToInfColon COLON T_ID
   33               | T_ID

   34 accessMode: PRIVATE
   35           | PROTECTED
   36           | PUBLIC
   37           | %empty

   38 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf CLOSEBRACE

   39 prototype0ToInf: prototype0ToInf prototype
   40                | %empty

   41 prototype: type T_ID OPENPAR formals CLOSEPAR SEMICOLON
   42          | VOID T_ID OPENPAR formals CLOSEPAR SEMICOLON

   43 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf CLOSEBRACE

   44 variableDecl0ToInf: variableDecl0ToInf variableDecl
   45                   | %empty

   46 stmt0ToInf: stmt0ToInf stmt
   47           | %empty

   48 stmt: expr0Or1 SEMICOLON
   49     | ifStmt
   50     | whileStmt
   51     | forStmt
   52     | breakStmt
   53     | continueStmt
   54     | returnStmt
   55     | printStmt
   56     | stmtBlock

   57 expr0Or1: %empty
   58         | expr

   59 ifStmt: IF OPENPAR expr CLOSEPAR stmt elseStmt0Or1

   60 elseStmt0Or1: %empty
   61             | ELSE stmt

   62 whileStmt: WHILE OPENPAR expr CLOSEPAR stmt

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

   64 returnStmt: RETURN expr0Or1 SEMICOLON

   65 breakStmt: BREAK SEMICOLON

   66 continueStmt: CONTINUE SEMICOLON

   67 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON

   68 expr1ToInfColon: expr1ToInfColon COLON expr
   69                | expr

   70 expr: lValue
   71     | constant
   72     | lValue EQ expr
   73     | THIS
   74     | call
   75     | OPENPAR expr CLOSEPAR
   76     | expr PLUS expr
   77     | expr MINUS expr
   78     | expr MUL expr
   79     | expr SLASH expr
   80     | expr PERCENT expr
   81     | MINUS expr
   82     | expr LE expr
   83     | expr LEQ expr
   84     | expr GR expr
   85     | expr GEQ expr
   86     | expr CHECKEQ expr
   87     | expr CHECKNOTEQ expr
   88     | expr AND expr
   89     | expr OR expr
   90     | EXCLAMATION expr
   91     | READINTEGER OPENPAR CLOSEPAR
   92     | READLINE OPENPAR CLOSEPAR
   93     | NEW T_ID
   94     | NEWARRAY OPENPAR expr COLON type CLOSEPAR
   95     | ITOD OPENPAR expr CLOSEPAR
   96     | DTOI OPENPAR expr CLOSEPAR
   97     | ITOB OPENPAR expr CLOSEPAR
   98     | BTOI OPENPAR expr CLOSEPAR

   99 lValue: T_ID
  100       | expr DOT T_ID
  101       | expr OPENBRACK expr CLOSEBRACK

  102 call: T_ID OPENPAR actuals CLOSEPAR
  103     | expr DOT T_ID OPENPAR actuals CLOSEPAR

  104 actuals: expr1ToInfColon
  105        | %empty

  106 constant: T_INTLITERAL
  107         | T_DOUBLELITERAL
  108         | T_BOOLEANLITERAL
  109         | T_STRINGLITERAL
  110         | NULL1


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VOID (258) 18 42
    INT (259) 11
    DOUBLE (260) 12
    BOOL (261) 13
    STRING (262) 14
    CLASS (263) 23
    INTERFACE (264) 38
    NULL1 (265) 110
    THIS (266) 73
    EXTENDS (267) 25
    IMPLEMENTS (268) 27
    FOR (269) 63
    WHILE (270) 62
    IF (271) 59
    ELSE (272) 61
    RETURN (273) 64
    BREAK (274) 65
    CONTINUE (275) 66
    NEW (276) 93
    NEWARRAY (277) 94
    PRINT (278) 67
    READINTEGER (279) 91
    READLINE (280) 92
    DTOI (281) 96
    ITOD (282) 95
    BTOI (283) 98
    ITOB (284) 97
    PRIVATE (285) 34
    PROTECTED (286) 35
    PUBLIC (287) 36
    GEQ (288) 85
    LEQ (289) 83
    GR (290) 84
    LE (291) 82
    SLASH (292) 79
    PLUS (293) 76
    MINUS (294) 77 81
    MUL (295) 78
    PERCENT (296) 80
    EQ (297) 72
    CHECKEQ (298) 86
    CHECKNOTEQ (299) 87
    OR (300) 89
    AND (301) 88
    EXCLAMATION (302) 90
    SEMICOLON (303) 8 41 42 48 63 64 65 66 67
    COLON (304) 21 32 68 94
    DOT (305) 100 103
    OPENBRACK (306) 15 101
    CLOSEBRACK (307) 15 101
    OPENPAR (308) 17 18 41 42 59 62 63 67 75 91 92 94 95 96 97 98 102 103
    CLOSEPAR (309) 17 18 41 42 59 62 63 67 75 91 92 94 95 96 97 98 102 103
    OPENBRACE (310) 23 38 43
    CLOSEBRACE (311) 23 38 43
    T_INTLITERAL (312) 106
    T_DOUBLELITERAL (313) 107
    T_STRINGLITERAL (314) 109
    T_BOOLEANLITERAL (315) 108
    T_ID (316) 9 10 16 17 18 23 25 32 33 38 41 42 93 99 100 102 103
    UNDEFINED (317)


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    start (64)
        on left: 1
        on right: 0
    program (65)
        on left: 2 3
        on right: 1 2
    decl (66)
        on left: 4 5 6 7
        on right: 2 3
    variableDecl (67)
        on left: 8
        on right: 4 30 44
    variable (68)
        on left: 9 10
        on right: 8 21 22
    type (69)
        on left: 11 12 13 14 15
        on right: 9 15 17 41 94
    newType (70)
        on left: 16
        on right: 10
    functionDecl (71)
        on left: 17 18
        on right: 5 31
    formals (72)
        on left: 19 20
        on right: 17 18 41 42
    variable1ToInfColon (73)
        on left: 21 22
        on right: 19 21
    classDecl (74)
        on left: 23
        on right: 6
    extendsIdent0Or1 (75)
        on left: 24 25
        on right: 23
    implementsIdentPlusColon0Or1 (76)
        on left: 26 27
        on right: 23
    fields0ToInf (77)
        on left: 28 29
        on right: 23 28
    field (78)
        on left: 30 31
        on right: 28
    ids1ToInfColon (79)
        on left: 32 33
        on right: 27 32
    accessMode (80)
        on left: 34 35 36 37
        on right: 30 31
    interfaceDecl (81)
        on left: 38
        on right: 7
    prototype0ToInf (82)
        on left: 39 40
        on right: 38 39
    prototype (83)
        on left: 41 42
        on right: 39
    stmtBlock (84)
        on left: 43
        on right: 17 18 56
    variableDecl0ToInf (85)
        on left: 44 45
        on right: 43 44
    stmt0ToInf (86)
        on left: 46 47
        on right: 43 46
    stmt (87)
        on left: 48 49 50 51 52 53 54 55 56
        on right: 46 59 61 62 63
    expr0Or1 (88)
        on left: 57 58
        on right: 48 63 64
    ifStmt (89)
        on left: 59
        on right: 49
    elseStmt0Or1 (90)
        on left: 60 61
        on right: 59
    whileStmt (91)
        on left: 62
        on right: 50
    forStmt (92)
        on left: 63
        on right: 51
    returnStmt (93)
        on left: 64
        on right: 54
    breakStmt (94)
        on left: 65
        on right: 52
    continueStmt (95)
        on left: 66
        on right: 53
    printStmt (96)
        on left: 67
        on right: 55
    expr1ToInfColon (97)
        on left: 68 69
        on right: 67 68 104
    expr (98)
        on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
        on right: 58 59 62 63 68 69 72 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 94 95 96 97 98 100 101 103
    lValue (99)
        on left: 99 100 101
        on right: 70 72
    call (100)
        on left: 102 103
        on right: 74
    actuals (101)
        on left: 104 105
        on right: 102 103
    constant (102)
        on left: 106 107 108 109 110
        on right: 71


State 0

    0 $accept: . start $end

    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    T_ID       shift, and go to state 8

    start          go to state 9
    program        go to state 10
    decl           go to state 11
    variableDecl   go to state 12
    variable       go to state 13
    type           go to state 14
    newType        go to state 15
    functionDecl   go to state 16
    classDecl      go to state 17
    interfaceDecl  go to state 18


State 1

   18 functionDecl: VOID . T_ID OPENPAR formals CLOSEPAR stmtBlock

    T_ID  shift, and go to state 19


State 2

   11 type: INT .

    $default  reduce using rule 11 (type)


State 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


State 4

   13 type: BOOL .

    $default  reduce using rule 13 (type)


State 5

   14 type: STRING .

    $default  reduce using rule 14 (type)


State 6

   23 classDecl: CLASS . T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    T_ID  shift, and go to state 20


State 7

   38 interfaceDecl: INTERFACE . T_ID OPENBRACE prototype0ToInf CLOSEBRACE

    T_ID  shift, and go to state 21


State 8

   16 newType: T_ID .

    $default  reduce using rule 16 (newType)


State 9

    0 $accept: start . $end

    $end  shift, and go to state 22


State 10

    1 start: program .
    2 program: program . decl

    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    T_ID       shift, and go to state 8

    $default  reduce using rule 1 (start)

    decl           go to state 23
    variableDecl   go to state 12
    variable       go to state 13
    type           go to state 14
    newType        go to state 15
    functionDecl   go to state 16
    classDecl      go to state 17
    interfaceDecl  go to state 18


State 11

    3 program: decl .

    $default  reduce using rule 3 (program)


State 12

    4 decl: variableDecl .

    $default  reduce using rule 4 (decl)


State 13

    8 variableDecl: variable . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 14

    9 variable: type . T_ID
   15 type: type . OPENBRACK CLOSEBRACK
   17 functionDecl: type . T_ID OPENPAR formals CLOSEPAR stmtBlock

    OPENBRACK  shift, and go to state 25
    T_ID       shift, and go to state 26


State 15

   10 variable: newType . T_ID

    T_ID  shift, and go to state 27


State 16

    5 decl: functionDecl .

    $default  reduce using rule 5 (decl)


State 17

    6 decl: classDecl .

    $default  reduce using rule 6 (decl)


State 18

    7 decl: interfaceDecl .

    $default  reduce using rule 7 (decl)


State 19

   18 functionDecl: VOID T_ID . OPENPAR formals CLOSEPAR stmtBlock

    OPENPAR  shift, and go to state 28


State 20

   23 classDecl: CLASS T_ID . extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    EXTENDS  shift, and go to state 29

    $default  reduce using rule 24 (extendsIdent0Or1)

    extendsIdent0Or1  go to state 30


State 21

   38 interfaceDecl: INTERFACE T_ID . OPENBRACE prototype0ToInf CLOSEBRACE

    OPENBRACE  shift, and go to state 31


State 22

    0 $accept: start $end .

    $default  accept


State 23

    2 program: program decl .

    $default  reduce using rule 2 (program)


State 24

    8 variableDecl: variable SEMICOLON .

    $default  reduce using rule 8 (variableDecl)


State 25

   15 type: type OPENBRACK . CLOSEBRACK

    CLOSEBRACK  shift, and go to state 32


State 26

    9 variable: type T_ID .
   17 functionDecl: type T_ID . OPENPAR formals CLOSEPAR stmtBlock

    OPENPAR  shift, and go to state 33

    $default  reduce using rule 9 (variable)


State 27

   10 variable: newType T_ID .

    $default  reduce using rule 10 (variable)


State 28

   18 functionDecl: VOID T_ID OPENPAR . formals CLOSEPAR stmtBlock

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    $default  reduce using rule 20 (formals)

    variable             go to state 34
    type                 go to state 35
    newType              go to state 15
    formals              go to state 36
    variable1ToInfColon  go to state 37


State 29

   25 extendsIdent0Or1: EXTENDS . T_ID

    T_ID  shift, and go to state 38


State 30

   23 classDecl: CLASS T_ID extendsIdent0Or1 . implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    IMPLEMENTS  shift, and go to state 39

    $default  reduce using rule 26 (implementsIdentPlusColon0Or1)

    implementsIdentPlusColon0Or1  go to state 40


State 31

   38 interfaceDecl: INTERFACE T_ID OPENBRACE . prototype0ToInf CLOSEBRACE

    $default  reduce using rule 40 (prototype0ToInf)

    prototype0ToInf  go to state 41


State 32

   15 type: type OPENBRACK CLOSEBRACK .

    $default  reduce using rule 15 (type)


State 33

   17 functionDecl: type T_ID OPENPAR . formals CLOSEPAR stmtBlock

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    $default  reduce using rule 20 (formals)

    variable             go to state 34
    type                 go to state 35
    newType              go to state 15
    formals              go to state 42
    variable1ToInfColon  go to state 37


State 34

   22 variable1ToInfColon: variable .

    $default  reduce using rule 22 (variable1ToInfColon)


State 35

    9 variable: type . T_ID
   15 type: type . OPENBRACK CLOSEBRACK

    OPENBRACK  shift, and go to state 25
    T_ID       shift, and go to state 43


State 36

   18 functionDecl: VOID T_ID OPENPAR formals . CLOSEPAR stmtBlock

    CLOSEPAR  shift, and go to state 44


State 37

   19 formals: variable1ToInfColon .
   21 variable1ToInfColon: variable1ToInfColon . COLON variable

    COLON  shift, and go to state 45

    $default  reduce using rule 19 (formals)


State 38

   25 extendsIdent0Or1: EXTENDS T_ID .

    $default  reduce using rule 25 (extendsIdent0Or1)


State 39

   27 implementsIdentPlusColon0Or1: IMPLEMENTS . ids1ToInfColon

    T_ID  shift, and go to state 46

    ids1ToInfColon  go to state 47


State 40

   23 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 . OPENBRACE fields0ToInf CLOSEBRACE

    OPENBRACE  shift, and go to state 48


State 41

   38 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf . CLOSEBRACE
   39 prototype0ToInf: prototype0ToInf . prototype

    VOID        shift, and go to state 49
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    CLOSEBRACE  shift, and go to state 50

    type       go to state 51
    prototype  go to state 52


State 42

   17 functionDecl: type T_ID OPENPAR formals . CLOSEPAR stmtBlock

    CLOSEPAR  shift, and go to state 53


State 43

    9 variable: type T_ID .

    $default  reduce using rule 9 (variable)


State 44

   18 functionDecl: VOID T_ID OPENPAR formals CLOSEPAR . stmtBlock

    OPENBRACE  shift, and go to state 54

    stmtBlock  go to state 55


State 45

   21 variable1ToInfColon: variable1ToInfColon COLON . variable

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    variable  go to state 56
    type      go to state 35
    newType   go to state 15


State 46

   33 ids1ToInfColon: T_ID .

    $default  reduce using rule 33 (ids1ToInfColon)


State 47

   27 implementsIdentPlusColon0Or1: IMPLEMENTS ids1ToInfColon .
   32 ids1ToInfColon: ids1ToInfColon . COLON T_ID

    COLON  shift, and go to state 57

    $default  reduce using rule 27 (implementsIdentPlusColon0Or1)


State 48

   23 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE . fields0ToInf CLOSEBRACE

    $default  reduce using rule 29 (fields0ToInf)

    fields0ToInf  go to state 58


State 49

   42 prototype: VOID . T_ID OPENPAR formals CLOSEPAR SEMICOLON

    T_ID  shift, and go to state 59


State 50

   38 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf CLOSEBRACE .

    $default  reduce using rule 38 (interfaceDecl)


State 51

   15 type: type . OPENBRACK CLOSEBRACK
   41 prototype: type . T_ID OPENPAR formals CLOSEPAR SEMICOLON

    OPENBRACK  shift, and go to state 25
    T_ID       shift, and go to state 60


State 52

   39 prototype0ToInf: prototype0ToInf prototype .

    $default  reduce using rule 39 (prototype0ToInf)


State 53

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR . stmtBlock

    OPENBRACE  shift, and go to state 54

    stmtBlock  go to state 61


State 54

   43 stmtBlock: OPENBRACE . variableDecl0ToInf stmt0ToInf CLOSEBRACE

    $default  reduce using rule 45 (variableDecl0ToInf)

    variableDecl0ToInf  go to state 62


State 55

   18 functionDecl: VOID T_ID OPENPAR formals CLOSEPAR stmtBlock .

    $default  reduce using rule 18 (functionDecl)


State 56

   21 variable1ToInfColon: variable1ToInfColon COLON variable .

    $default  reduce using rule 21 (variable1ToInfColon)


State 57

   32 ids1ToInfColon: ids1ToInfColon COLON . T_ID

    T_ID  shift, and go to state 63


State 58

   23 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf . CLOSEBRACE
   28 fields0ToInf: fields0ToInf . field

    PRIVATE     shift, and go to state 64
    PROTECTED   shift, and go to state 65
    PUBLIC      shift, and go to state 66
    CLOSEBRACE  shift, and go to state 67

    $default  reduce using rule 37 (accessMode)

    field       go to state 68
    accessMode  go to state 69


State 59

   42 prototype: VOID T_ID . OPENPAR formals CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 70


State 60

   41 prototype: type T_ID . OPENPAR formals CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 71


State 61

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR stmtBlock .

    $default  reduce using rule 17 (functionDecl)


State 62

   43 stmtBlock: OPENBRACE variableDecl0ToInf . stmt0ToInf CLOSEBRACE
   44 variableDecl0ToInf: variableDecl0ToInf . variableDecl

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    T_ID      [reduce using rule 47 (stmt0ToInf)]
    $default  reduce using rule 47 (stmt0ToInf)

    variableDecl  go to state 72
    variable      go to state 13
    type          go to state 35
    newType       go to state 15
    stmt0ToInf    go to state 73


State 63

   32 ids1ToInfColon: ids1ToInfColon COLON T_ID .

    $default  reduce using rule 32 (ids1ToInfColon)


State 64

   34 accessMode: PRIVATE .

    $default  reduce using rule 34 (accessMode)


State 65

   35 accessMode: PROTECTED .

    $default  reduce using rule 35 (accessMode)


State 66

   36 accessMode: PUBLIC .

    $default  reduce using rule 36 (accessMode)


State 67

   23 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE .

    $default  reduce using rule 23 (classDecl)


State 68

   28 fields0ToInf: fields0ToInf field .

    $default  reduce using rule 28 (fields0ToInf)


State 69

   30 field: accessMode . variableDecl
   31      | accessMode . functionDecl

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    variableDecl  go to state 74
    variable      go to state 13
    type          go to state 14
    newType       go to state 15
    functionDecl  go to state 75


State 70

   42 prototype: VOID T_ID OPENPAR . formals CLOSEPAR SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    $default  reduce using rule 20 (formals)

    variable             go to state 34
    type                 go to state 35
    newType              go to state 15
    formals              go to state 76
    variable1ToInfColon  go to state 37


State 71

   41 prototype: type T_ID OPENPAR . formals CLOSEPAR SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    $default  reduce using rule 20 (formals)

    variable             go to state 34
    type                 go to state 35
    newType              go to state 15
    formals              go to state 77
    variable1ToInfColon  go to state 37


State 72

   44 variableDecl0ToInf: variableDecl0ToInf variableDecl .

    $default  reduce using rule 44 (variableDecl0ToInf)


State 73

   43 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf . CLOSEBRACE
   46 stmt0ToInf: stmt0ToInf . stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    FOR               shift, and go to state 80
    WHILE             shift, and go to state 81
    IF                shift, and go to state 82
    RETURN            shift, and go to state 83
    BREAK             shift, and go to state 84
    CONTINUE          shift, and go to state 85
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    PRINT             shift, and go to state 88
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    OPENBRACE         shift, and go to state 54
    CLOSEBRACE        shift, and go to state 98
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    stmtBlock     go to state 104
    stmt          go to state 105
    expr0Or1      go to state 106
    ifStmt        go to state 107
    whileStmt     go to state 108
    forStmt       go to state 109
    returnStmt    go to state 110
    breakStmt     go to state 111
    continueStmt  go to state 112
    printStmt     go to state 113
    expr          go to state 114
    lValue        go to state 115
    call          go to state 116
    constant      go to state 117


State 74

   30 field: accessMode variableDecl .

    $default  reduce using rule 30 (field)


State 75

   31 field: accessMode functionDecl .

    $default  reduce using rule 31 (field)


State 76

   42 prototype: VOID T_ID OPENPAR formals . CLOSEPAR SEMICOLON

    CLOSEPAR  shift, and go to state 118


State 77

   41 prototype: type T_ID OPENPAR formals . CLOSEPAR SEMICOLON

    CLOSEPAR  shift, and go to state 119


State 78

  110 constant: NULL1 .

    $default  reduce using rule 110 (constant)


State 79

   73 expr: THIS .

    $default  reduce using rule 73 (expr)


State 80

   63 forStmt: FOR . OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    OPENPAR  shift, and go to state 120


State 81

   62 whileStmt: WHILE . OPENPAR expr CLOSEPAR stmt

    OPENPAR  shift, and go to state 121


State 82

   59 ifStmt: IF . OPENPAR expr CLOSEPAR stmt elseStmt0Or1

    OPENPAR  shift, and go to state 122


State 83

   64 returnStmt: RETURN . expr0Or1 SEMICOLON

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    expr0Or1  go to state 123
    expr      go to state 114
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 84

   65 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 85

   66 continueStmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 86

   93 expr: NEW . T_ID

    T_ID  shift, and go to state 126


State 87

   94 expr: NEWARRAY . OPENPAR expr COLON type CLOSEPAR

    OPENPAR  shift, and go to state 127


State 88

   67 printStmt: PRINT . OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 128


State 89

   91 expr: READINTEGER . OPENPAR CLOSEPAR

    OPENPAR  shift, and go to state 129


State 90

   92 expr: READLINE . OPENPAR CLOSEPAR

    OPENPAR  shift, and go to state 130


State 91

   96 expr: DTOI . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 131


State 92

   95 expr: ITOD . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 132


State 93

   98 expr: BTOI . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 133


State 94

   97 expr: ITOB . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 134


State 95

   81 expr: MINUS . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 135
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 96

   90 expr: EXCLAMATION . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 136
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 97

   75 expr: OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 137
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 98

   43 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf CLOSEBRACE .

    $default  reduce using rule 43 (stmtBlock)


State 99

  106 constant: T_INTLITERAL .

    $default  reduce using rule 106 (constant)


State 100

  107 constant: T_DOUBLELITERAL .

    $default  reduce using rule 107 (constant)


State 101

  109 constant: T_STRINGLITERAL .

    $default  reduce using rule 109 (constant)


State 102

  108 constant: T_BOOLEANLITERAL .

    $default  reduce using rule 108 (constant)


State 103

   99 lValue: T_ID .
  102 call: T_ID . OPENPAR actuals CLOSEPAR

    OPENPAR  shift, and go to state 138

    $default  reduce using rule 99 (lValue)


State 104

   56 stmt: stmtBlock .

    $default  reduce using rule 56 (stmt)


State 105

   46 stmt0ToInf: stmt0ToInf stmt .

    $default  reduce using rule 46 (stmt0ToInf)


State 106

   48 stmt: expr0Or1 . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 107

   49 stmt: ifStmt .

    $default  reduce using rule 49 (stmt)


State 108

   50 stmt: whileStmt .

    $default  reduce using rule 50 (stmt)


State 109

   51 stmt: forStmt .

    $default  reduce using rule 51 (stmt)


State 110

   54 stmt: returnStmt .

    $default  reduce using rule 54 (stmt)


State 111

   52 stmt: breakStmt .

    $default  reduce using rule 52 (stmt)


State 112

   53 stmt: continueStmt .

    $default  reduce using rule 53 (stmt)


State 113

   55 stmt: printStmt .

    $default  reduce using rule 55 (stmt)


State 114

   58 expr0Or1: expr .
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154

    $default  reduce using rule 58 (expr0Or1)


State 115

   70 expr: lValue .
   72     | lValue . EQ expr

    EQ  shift, and go to state 155

    $default  reduce using rule 70 (expr)


State 116

   74 expr: call .

    $default  reduce using rule 74 (expr)


State 117

   71 expr: constant .

    $default  reduce using rule 71 (expr)


State 118

   42 prototype: VOID T_ID OPENPAR formals CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 156


State 119

   41 prototype: type T_ID OPENPAR formals CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 120

   63 forStmt: FOR OPENPAR . expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    expr0Or1  go to state 158
    expr      go to state 114
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 121

   62 whileStmt: WHILE OPENPAR . expr CLOSEPAR stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 159
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 122

   59 ifStmt: IF OPENPAR . expr CLOSEPAR stmt elseStmt0Or1

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 160
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 123

   64 returnStmt: RETURN expr0Or1 . SEMICOLON

    SEMICOLON  shift, and go to state 161


State 124

   65 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 65 (breakStmt)


State 125

   66 continueStmt: CONTINUE SEMICOLON .

    $default  reduce using rule 66 (continueStmt)


State 126

   93 expr: NEW T_ID .

    $default  reduce using rule 93 (expr)


State 127

   94 expr: NEWARRAY OPENPAR . expr COLON type CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 162
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 128

   67 printStmt: PRINT OPENPAR . expr1ToInfColon CLOSEPAR SEMICOLON

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr1ToInfColon  go to state 163
    expr             go to state 164
    lValue           go to state 115
    call             go to state 116
    constant         go to state 117


State 129

   91 expr: READINTEGER OPENPAR . CLOSEPAR

    CLOSEPAR  shift, and go to state 165


State 130

   92 expr: READLINE OPENPAR . CLOSEPAR

    CLOSEPAR  shift, and go to state 166


State 131

   96 expr: DTOI OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 167
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 132

   95 expr: ITOD OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 168
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 133

   98 expr: BTOI OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 169
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 134

   97 expr: ITOB OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 170
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 135

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   81     | MINUS expr .
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 81 (expr)


State 136

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   90     | EXCLAMATION expr .
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    $default  reduce using rule 90 (expr)


State 137

   75 expr: OPENPAR expr . CLOSEPAR
   76     | expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 171


State 138

  102 call: T_ID OPENPAR . actuals CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 105 (actuals)

    expr1ToInfColon  go to state 172
    expr             go to state 164
    lValue           go to state 115
    call             go to state 116
    actuals          go to state 173
    constant         go to state 117


State 139

   48 stmt: expr0Or1 SEMICOLON .

    $default  reduce using rule 48 (stmt)


State 140

   85 expr: expr GEQ . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 174
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 141

   83 expr: expr LEQ . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 175
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 142

   84 expr: expr GR . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 176
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 143

   82 expr: expr LE . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 177
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 144

   79 expr: expr SLASH . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 178
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 145

   76 expr: expr PLUS . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 179
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 146

   77 expr: expr MINUS . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 180
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 147

   78 expr: expr MUL . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 181
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 148

   80 expr: expr PERCENT . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 182
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 149

   86 expr: expr CHECKEQ . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 183
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 150

   87 expr: expr CHECKNOTEQ . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 184
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 151

   89 expr: expr OR . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 185
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 152

   88 expr: expr AND . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 186
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 153

  100 lValue: expr DOT . T_ID
  103 call: expr DOT . T_ID OPENPAR actuals CLOSEPAR

    T_ID  shift, and go to state 187


State 154

  101 lValue: expr OPENBRACK . expr CLOSEBRACK

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 188
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 155

   72 expr: lValue EQ . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 189
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 156

   42 prototype: VOID T_ID OPENPAR formals CLOSEPAR SEMICOLON .

    $default  reduce using rule 42 (prototype)


State 157

   41 prototype: type T_ID OPENPAR formals CLOSEPAR SEMICOLON .

    $default  reduce using rule 41 (prototype)


State 158

   63 forStmt: FOR OPENPAR expr0Or1 . SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    SEMICOLON  shift, and go to state 190


State 159

   62 whileStmt: WHILE OPENPAR expr . CLOSEPAR stmt
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 191


State 160

   59 ifStmt: IF OPENPAR expr . CLOSEPAR stmt elseStmt0Or1
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 192


State 161

   64 returnStmt: RETURN expr0Or1 SEMICOLON .

    $default  reduce using rule 64 (returnStmt)


State 162

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   94     | NEWARRAY OPENPAR expr . COLON type CLOSEPAR
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    COLON       shift, and go to state 193
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154


State 163

   67 printStmt: PRINT OPENPAR expr1ToInfColon . CLOSEPAR SEMICOLON
   68 expr1ToInfColon: expr1ToInfColon . COLON expr

    COLON     shift, and go to state 194
    CLOSEPAR  shift, and go to state 195


State 164

   69 expr1ToInfColon: expr .
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154

    $default  reduce using rule 69 (expr1ToInfColon)


State 165

   91 expr: READINTEGER OPENPAR CLOSEPAR .

    $default  reduce using rule 91 (expr)


State 166

   92 expr: READLINE OPENPAR CLOSEPAR .

    $default  reduce using rule 92 (expr)


State 167

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   96     | DTOI OPENPAR expr . CLOSEPAR
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 196


State 168

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   95     | ITOD OPENPAR expr . CLOSEPAR
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 197


State 169

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   98     | BTOI OPENPAR expr . CLOSEPAR
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 198


State 170

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   97     | ITOB OPENPAR expr . CLOSEPAR
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEPAR    shift, and go to state 199


State 171

   75 expr: OPENPAR expr CLOSEPAR .

    $default  reduce using rule 75 (expr)


State 172

   68 expr1ToInfColon: expr1ToInfColon . COLON expr
  104 actuals: expr1ToInfColon .

    COLON  shift, and go to state 194

    $default  reduce using rule 104 (actuals)


State 173

  102 call: T_ID OPENPAR actuals . CLOSEPAR

    CLOSEPAR  shift, and go to state 200


State 174

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   85     | expr GEQ expr .
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 85 (expr)


State 175

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   83     | expr LEQ expr .
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 83 (expr)


State 176

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   84     | expr GR expr .
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 84 (expr)


State 177

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   82     | expr LE expr .
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 82 (expr)


State 178

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   79     | expr SLASH expr .
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 79 (expr)


State 179

   76 expr: expr . PLUS expr
   76     | expr PLUS expr .
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 76 (expr)


State 180

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   77     | expr MINUS expr .
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 77 (expr)


State 181

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   78     | expr MUL expr .
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 78 (expr)


State 182

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   80     | expr PERCENT expr .
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 80 (expr)


State 183

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   86     | expr CHECKEQ expr .
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 86 (expr)


State 184

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   87     | expr CHECKNOTEQ expr .
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 87 (expr)


State 185

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
   89     | expr OR expr .
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 89 (expr)


State 186

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   88     | expr AND expr .
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 88 (expr)


State 187

  100 lValue: expr DOT T_ID .
  103 call: expr DOT T_ID . OPENPAR actuals CLOSEPAR

    OPENPAR  shift, and go to state 201

    $default  reduce using rule 100 (lValue)


State 188

   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  101       | expr OPENBRACK expr . CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154
    CLOSEBRACK  shift, and go to state 202


State 189

   72 expr: lValue EQ expr .
   76     | expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152

    $default  reduce using rule 72 (expr)


State 190

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON . expr SEMICOLON expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 203
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 191

   62 whileStmt: WHILE OPENPAR expr CLOSEPAR . stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    FOR               shift, and go to state 80
    WHILE             shift, and go to state 81
    IF                shift, and go to state 82
    RETURN            shift, and go to state 83
    BREAK             shift, and go to state 84
    CONTINUE          shift, and go to state 85
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    PRINT             shift, and go to state 88
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    OPENBRACE         shift, and go to state 54
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    stmtBlock     go to state 104
    stmt          go to state 204
    expr0Or1      go to state 106
    ifStmt        go to state 107
    whileStmt     go to state 108
    forStmt       go to state 109
    returnStmt    go to state 110
    breakStmt     go to state 111
    continueStmt  go to state 112
    printStmt     go to state 113
    expr          go to state 114
    lValue        go to state 115
    call          go to state 116
    constant      go to state 117


State 192

   59 ifStmt: IF OPENPAR expr CLOSEPAR . stmt elseStmt0Or1

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    FOR               shift, and go to state 80
    WHILE             shift, and go to state 81
    IF                shift, and go to state 82
    RETURN            shift, and go to state 83
    BREAK             shift, and go to state 84
    CONTINUE          shift, and go to state 85
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    PRINT             shift, and go to state 88
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    OPENBRACE         shift, and go to state 54
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    stmtBlock     go to state 104
    stmt          go to state 205
    expr0Or1      go to state 106
    ifStmt        go to state 107
    whileStmt     go to state 108
    forStmt       go to state 109
    returnStmt    go to state 110
    breakStmt     go to state 111
    continueStmt  go to state 112
    printStmt     go to state 113
    expr          go to state 114
    lValue        go to state 115
    call          go to state 116
    constant      go to state 117


State 193

   94 expr: NEWARRAY OPENPAR expr COLON . type CLOSEPAR

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 206


State 194

   68 expr1ToInfColon: expr1ToInfColon COLON . expr

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    expr      go to state 207
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 195

   67 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 208


State 196

   96 expr: DTOI OPENPAR expr CLOSEPAR .

    $default  reduce using rule 96 (expr)


State 197

   95 expr: ITOD OPENPAR expr CLOSEPAR .

    $default  reduce using rule 95 (expr)


State 198

   98 expr: BTOI OPENPAR expr CLOSEPAR .

    $default  reduce using rule 98 (expr)


State 199

   97 expr: ITOB OPENPAR expr CLOSEPAR .

    $default  reduce using rule 97 (expr)


State 200

  102 call: T_ID OPENPAR actuals CLOSEPAR .

    $default  reduce using rule 102 (call)


State 201

  103 call: expr DOT T_ID OPENPAR . actuals CLOSEPAR

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 105 (actuals)

    expr1ToInfColon  go to state 172
    expr             go to state 164
    lValue           go to state 115
    call             go to state 116
    actuals          go to state 209
    constant         go to state 117


State 202

  101 lValue: expr OPENBRACK expr CLOSEBRACK .

    $default  reduce using rule 101 (lValue)


State 203

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr . SEMICOLON expr0Or1 CLOSEPAR stmt
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    SEMICOLON   shift, and go to state 210
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154


State 204

   62 whileStmt: WHILE OPENPAR expr CLOSEPAR stmt .

    $default  reduce using rule 62 (whileStmt)


State 205

   59 ifStmt: IF OPENPAR expr CLOSEPAR stmt . elseStmt0Or1

    ELSE  shift, and go to state 211

    ELSE      [reduce using rule 60 (elseStmt0Or1)]
    $default  reduce using rule 60 (elseStmt0Or1)

    elseStmt0Or1  go to state 212


State 206

   15 type: type . OPENBRACK CLOSEBRACK
   94 expr: NEWARRAY OPENPAR expr COLON type . CLOSEPAR

    OPENBRACK  shift, and go to state 25
    CLOSEPAR   shift, and go to state 213


State 207

   68 expr1ToInfColon: expr1ToInfColon COLON expr .
   76 expr: expr . PLUS expr
   77     | expr . MINUS expr
   78     | expr . MUL expr
   79     | expr . SLASH expr
   80     | expr . PERCENT expr
   82     | expr . LE expr
   83     | expr . LEQ expr
   84     | expr . GR expr
   85     | expr . GEQ expr
   86     | expr . CHECKEQ expr
   87     | expr . CHECKNOTEQ expr
   88     | expr . AND expr
   89     | expr . OR expr
  100 lValue: expr . DOT T_ID
  101       | expr . OPENBRACK expr CLOSEBRACK
  103 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 140
    LEQ         shift, and go to state 141
    GR          shift, and go to state 142
    LE          shift, and go to state 143
    SLASH       shift, and go to state 144
    PLUS        shift, and go to state 145
    MINUS       shift, and go to state 146
    MUL         shift, and go to state 147
    PERCENT     shift, and go to state 148
    CHECKEQ     shift, and go to state 149
    CHECKNOTEQ  shift, and go to state 150
    OR          shift, and go to state 151
    AND         shift, and go to state 152
    DOT         shift, and go to state 153
    OPENBRACK   shift, and go to state 154

    $default  reduce using rule 68 (expr1ToInfColon)


State 208

   67 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON .

    $default  reduce using rule 67 (printStmt)


State 209

  103 call: expr DOT T_ID OPENPAR actuals . CLOSEPAR

    CLOSEPAR  shift, and go to state 214


State 210

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON . expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    expr0Or1  go to state 215
    expr      go to state 114
    lValue    go to state 115
    call      go to state 116
    constant  go to state 117


State 211

   61 elseStmt0Or1: ELSE . stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    FOR               shift, and go to state 80
    WHILE             shift, and go to state 81
    IF                shift, and go to state 82
    RETURN            shift, and go to state 83
    BREAK             shift, and go to state 84
    CONTINUE          shift, and go to state 85
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    PRINT             shift, and go to state 88
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    OPENBRACE         shift, and go to state 54
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    stmtBlock     go to state 104
    stmt          go to state 216
    expr0Or1      go to state 106
    ifStmt        go to state 107
    whileStmt     go to state 108
    forStmt       go to state 109
    returnStmt    go to state 110
    breakStmt     go to state 111
    continueStmt  go to state 112
    printStmt     go to state 113
    expr          go to state 114
    lValue        go to state 115
    call          go to state 116
    constant      go to state 117


State 212

   59 ifStmt: IF OPENPAR expr CLOSEPAR stmt elseStmt0Or1 .

    $default  reduce using rule 59 (ifStmt)


State 213

   94 expr: NEWARRAY OPENPAR expr COLON type CLOSEPAR .

    $default  reduce using rule 94 (expr)


State 214

  103 call: expr DOT T_ID OPENPAR actuals CLOSEPAR .

    $default  reduce using rule 103 (call)


State 215

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 . CLOSEPAR stmt

    CLOSEPAR  shift, and go to state 217


State 216

   61 elseStmt0Or1: ELSE stmt .

    $default  reduce using rule 61 (elseStmt0Or1)


State 217

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR . stmt

    NULL1             shift, and go to state 78
    THIS              shift, and go to state 79
    FOR               shift, and go to state 80
    WHILE             shift, and go to state 81
    IF                shift, and go to state 82
    RETURN            shift, and go to state 83
    BREAK             shift, and go to state 84
    CONTINUE          shift, and go to state 85
    NEW               shift, and go to state 86
    NEWARRAY          shift, and go to state 87
    PRINT             shift, and go to state 88
    READINTEGER       shift, and go to state 89
    READLINE          shift, and go to state 90
    DTOI              shift, and go to state 91
    ITOD              shift, and go to state 92
    BTOI              shift, and go to state 93
    ITOB              shift, and go to state 94
    MINUS             shift, and go to state 95
    EXCLAMATION       shift, and go to state 96
    OPENPAR           shift, and go to state 97
    OPENBRACE         shift, and go to state 54
    T_INTLITERAL      shift, and go to state 99
    T_DOUBLELITERAL   shift, and go to state 100
    T_STRINGLITERAL   shift, and go to state 101
    T_BOOLEANLITERAL  shift, and go to state 102
    T_ID              shift, and go to state 103

    $default  reduce using rule 57 (expr0Or1)

    stmtBlock     go to state 104
    stmt          go to state 218
    expr0Or1      go to state 106
    ifStmt        go to state 107
    whileStmt     go to state 108
    forStmt       go to state 109
    returnStmt    go to state 110
    breakStmt     go to state 111
    continueStmt  go to state 112
    printStmt     go to state 113
    expr          go to state 114
    lValue        go to state 115
    call          go to state 116
    constant      go to state 117


State 218

   63 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt .

    $default  reduce using rule 63 (forStmt)
