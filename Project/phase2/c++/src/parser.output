Terminals unused in grammar

    UNDEFINED


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program decl
    3        | decl

    4 decl: variableDecl
    5     | functionDecl
    6     | classDecl
    7     | interfaceDecl

    8 variableDecl: variable SEMICOLON

    9 variable: type T_ID
   10         | T_ID T_ID

   11 type: INT
   12     | DOUBLE
   13     | BOOL
   14     | STRING
   15     | type OPENBRACK CLOSEBRACK
   16     | T_ID OPENBRACK CLOSEBRACK

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR stmtBlock
   18             | VOID T_ID OPENPAR formals CLOSEPAR stmtBlock
   19             | T_ID T_ID OPENPAR formals CLOSEPAR stmtBlock

   20 formals: variable1ToInfColon
   21        | %empty

   22 variable1ToInfColon: variable1ToInfColon COLON variable
   23                    | variable

   24 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

   25 extendsIdent0Or1: %empty
   26                 | EXTENDS T_ID

   27 implementsIdentPlusColon0Or1: %empty
   28                             | IMPLEMENTS ids1ToInfColon

   29 fields0ToInf: fields0ToInf field
   30             | %empty

   31 field: accessMode variableDecl
   32      | accessMode functionDecl

   33 ids1ToInfColon: ids1ToInfColon COLON T_ID
   34               | T_ID

   35 accessMode: PRIVATE
   36           | PROTECTED
   37           | PUBLIC
   38           | %empty

   39 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf CLOSEBRACE

   40 prototype0ToInf: prototype0ToInf prototype
   41                | %empty

   42 prototype: type T_ID OPENPAR formals CLOSEPAR SEMICOLON
   43          | VOID T_ID OPENPAR formals CLOSEPAR SEMICOLON
   44          | T_ID T_ID OPENPAR formals CLOSEPAR SEMICOLON

   45 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf CLOSEBRACE

   46 variableDecl0ToInf: variableDecl0ToInf variableDecl
   47                   | %empty

   48 stmt0ToInf: stmt stmt0ToInf
   49           | %empty

   50 stmt: expr0Or1 SEMICOLON
   51     | ifStmt
   52     | whileStmt
   53     | forStmt
   54     | breakStmt
   55     | continueStmt
   56     | returnStmt
   57     | printStmt
   58     | stmtBlock

   59 expr0Or1: %empty
   60         | expr

   61 ifStmt: IF OPENPAR expr CLOSEPAR stmt elseStmt0Or1

   62 elseStmt0Or1: %empty
   63             | ELSE stmt

   64 whileStmt: WHILE OPENPAR expr CLOSEPAR stmt

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

   66 returnStmt: RETURN expr0Or1 SEMICOLON

   67 breakStmt: BREAK SEMICOLON

   68 continueStmt: CONTINUE SEMICOLON

   69 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON

   70 expr1ToInfColon: expr1ToInfColon COLON expr
   71                | expr

   72 expr: lValue
   73     | T_ID
   74     | constant
   75     | lValue EQ expr
   76     | T_ID EQ expr
   77     | THIS
   78     | call
   79     | OPENPAR expr CLOSEPAR
   80     | expr PLUS expr
   81     | expr MINUS expr
   82     | expr MUL expr
   83     | expr SLASH expr
   84     | expr PERCENT expr
   85     | MINUS expr
   86     | expr LE expr
   87     | expr LEQ expr
   88     | expr GR expr
   89     | expr GEQ expr
   90     | expr CHECKEQ expr
   91     | expr CHECKNOTEQ expr
   92     | expr AND expr
   93     | expr OR expr
   94     | EXCLAMATION expr
   95     | READINTEGER OPENPAR CLOSEPAR
   96     | READLINE OPENPAR CLOSEPAR
   97     | NEW T_ID
   98     | NEWARRAY OPENPAR expr COLON type CLOSEPAR
   99     | NEWARRAY OPENPAR expr COLON T_ID CLOSEPAR
  100     | ITOD OPENPAR expr CLOSEPAR
  101     | DTOI OPENPAR expr CLOSEPAR
  102     | ITOB OPENPAR expr CLOSEPAR
  103     | BTOI OPENPAR expr CLOSEPAR

  104 lValue: expr DOT T_ID
  105       | expr OPENBRACK expr CLOSEBRACK

  106 call: T_ID OPENPAR actuals CLOSEPAR
  107     | expr DOT T_ID OPENPAR actuals CLOSEPAR

  108 actuals: expr1ToInfColon
  109        | %empty

  110 constant: T_INTLITERAL
  111         | T_DOUBLELITERAL
  112         | T_BOOLEANLITERAL
  113         | T_STRINGLITERAL
  114         | NULL1


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VOID (258) 18 43
    INT (259) 11
    DOUBLE (260) 12
    BOOL (261) 13
    STRING (262) 14
    CLASS (263) 24
    INTERFACE (264) 39
    NULL1 (265) 114
    THIS (266) 77
    EXTENDS (267) 26
    IMPLEMENTS (268) 28
    FOR (269) 65
    WHILE (270) 64
    IF (271) 61
    ELSE (272) 63
    RETURN (273) 66
    BREAK (274) 67
    CONTINUE (275) 68
    NEW (276) 97
    NEWARRAY (277) 98 99
    PRINT (278) 69
    READINTEGER (279) 95
    READLINE (280) 96
    DTOI (281) 101
    ITOD (282) 100
    BTOI (283) 103
    ITOB (284) 102
    PRIVATE (285) 35
    PROTECTED (286) 36
    PUBLIC (287) 37
    GEQ (288) 89
    LEQ (289) 87
    GR (290) 88
    LE (291) 86
    SLASH (292) 83
    PLUS (293) 80
    MINUS (294) 81 85
    MUL (295) 82
    PERCENT (296) 84
    EQ (297) 75 76
    CHECKEQ (298) 90
    CHECKNOTEQ (299) 91
    OR (300) 93
    AND (301) 92
    EXCLAMATION (302) 94
    SEMICOLON (303) 8 42 43 44 50 65 66 67 68 69
    COLON (304) 22 33 70 98 99
    DOT (305) 104 107
    OPENBRACK (306) 15 16 105
    CLOSEBRACK (307) 15 16 105
    OPENPAR (308) 17 18 19 42 43 44 61 64 65 69 79 95 96 98 99 100 101 102 103 106 107
    CLOSEPAR (309) 17 18 19 42 43 44 61 64 65 69 79 95 96 98 99 100 101 102 103 106 107
    OPENBRACE (310) 24 39 45
    CLOSEBRACE (311) 24 39 45
    T_INTLITERAL (312) 110
    T_DOUBLELITERAL (313) 111
    T_STRINGLITERAL (314) 113
    T_BOOLEANLITERAL (315) 112
    T_ID (316) 9 10 16 17 18 19 24 26 33 34 39 42 43 44 73 76 97 99 104 106 107
    UNDEFINED (317)
    NoELSE (318)
    NoEQ (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    start (66)
        on left: 1
        on right: 0
    program (67)
        on left: 2 3
        on right: 1 2
    decl (68)
        on left: 4 5 6 7
        on right: 2 3
    variableDecl (69)
        on left: 8
        on right: 4 31 46
    variable (70)
        on left: 9 10
        on right: 8 22 23
    type (71)
        on left: 11 12 13 14 15 16
        on right: 9 15 17 42 98
    functionDecl (72)
        on left: 17 18 19
        on right: 5 32
    formals (73)
        on left: 20 21
        on right: 17 18 19 42 43 44
    variable1ToInfColon (74)
        on left: 22 23
        on right: 20 22
    classDecl (75)
        on left: 24
        on right: 6
    extendsIdent0Or1 (76)
        on left: 25 26
        on right: 24
    implementsIdentPlusColon0Or1 (77)
        on left: 27 28
        on right: 24
    fields0ToInf (78)
        on left: 29 30
        on right: 24 29
    field (79)
        on left: 31 32
        on right: 29
    ids1ToInfColon (80)
        on left: 33 34
        on right: 28 33
    accessMode (81)
        on left: 35 36 37 38
        on right: 31 32
    interfaceDecl (82)
        on left: 39
        on right: 7
    prototype0ToInf (83)
        on left: 40 41
        on right: 39 40
    prototype (84)
        on left: 42 43 44
        on right: 40
    stmtBlock (85)
        on left: 45
        on right: 17 18 19 58
    variableDecl0ToInf (86)
        on left: 46 47
        on right: 45 46
    stmt0ToInf (87)
        on left: 48 49
        on right: 45 48
    stmt (88)
        on left: 50 51 52 53 54 55 56 57 58
        on right: 48 61 63 64 65
    expr0Or1 (89)
        on left: 59 60
        on right: 50 65 66
    ifStmt (90)
        on left: 61
        on right: 51
    elseStmt0Or1 (91)
        on left: 62 63
        on right: 61
    whileStmt (92)
        on left: 64
        on right: 52
    forStmt (93)
        on left: 65
        on right: 53
    returnStmt (94)
        on left: 66
        on right: 56
    breakStmt (95)
        on left: 67
        on right: 54
    continueStmt (96)
        on left: 68
        on right: 55
    printStmt (97)
        on left: 69
        on right: 57
    expr1ToInfColon (98)
        on left: 70 71
        on right: 69 70 108
    expr (99)
        on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
        on right: 60 61 64 65 70 71 75 76 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 98 99 100 101 102 103 104 105 107
    lValue (100)
        on left: 104 105
        on right: 72 75
    call (101)
        on left: 106 107
        on right: 78
    actuals (102)
        on left: 108 109
        on right: 106 107
    constant (103)
        on left: 110 111 112 113 114
        on right: 74


State 0

    0 $accept: . start $end

    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    T_ID       shift, and go to state 8

    start          go to state 9
    program        go to state 10
    decl           go to state 11
    variableDecl   go to state 12
    variable       go to state 13
    type           go to state 14
    functionDecl   go to state 15
    classDecl      go to state 16
    interfaceDecl  go to state 17


State 1

   18 functionDecl: VOID . T_ID OPENPAR formals CLOSEPAR stmtBlock

    T_ID  shift, and go to state 18


State 2

   11 type: INT .

    $default  reduce using rule 11 (type)


State 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


State 4

   13 type: BOOL .

    $default  reduce using rule 13 (type)


State 5

   14 type: STRING .

    $default  reduce using rule 14 (type)


State 6

   24 classDecl: CLASS . T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    T_ID  shift, and go to state 19


State 7

   39 interfaceDecl: INTERFACE . T_ID OPENBRACE prototype0ToInf CLOSEBRACE

    T_ID  shift, and go to state 20


State 8

   10 variable: T_ID . T_ID
   16 type: T_ID . OPENBRACK CLOSEBRACK
   19 functionDecl: T_ID . T_ID OPENPAR formals CLOSEPAR stmtBlock

    OPENBRACK  shift, and go to state 21
    T_ID       shift, and go to state 22


State 9

    0 $accept: start . $end

    $end  shift, and go to state 23


State 10

    1 start: program .
    2 program: program . decl

    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    T_ID       shift, and go to state 8

    $default  reduce using rule 1 (start)

    decl           go to state 24
    variableDecl   go to state 12
    variable       go to state 13
    type           go to state 14
    functionDecl   go to state 15
    classDecl      go to state 16
    interfaceDecl  go to state 17


State 11

    3 program: decl .

    $default  reduce using rule 3 (program)


State 12

    4 decl: variableDecl .

    $default  reduce using rule 4 (decl)


State 13

    8 variableDecl: variable . SEMICOLON

    SEMICOLON  shift, and go to state 25


State 14

    9 variable: type . T_ID
   15 type: type . OPENBRACK CLOSEBRACK
   17 functionDecl: type . T_ID OPENPAR formals CLOSEPAR stmtBlock

    OPENBRACK  shift, and go to state 26
    T_ID       shift, and go to state 27


State 15

    5 decl: functionDecl .

    $default  reduce using rule 5 (decl)


State 16

    6 decl: classDecl .

    $default  reduce using rule 6 (decl)


State 17

    7 decl: interfaceDecl .

    $default  reduce using rule 7 (decl)


State 18

   18 functionDecl: VOID T_ID . OPENPAR formals CLOSEPAR stmtBlock

    OPENPAR  shift, and go to state 28


State 19

   24 classDecl: CLASS T_ID . extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    EXTENDS  shift, and go to state 29

    $default  reduce using rule 25 (extendsIdent0Or1)

    extendsIdent0Or1  go to state 30


State 20

   39 interfaceDecl: INTERFACE T_ID . OPENBRACE prototype0ToInf CLOSEBRACE

    OPENBRACE  shift, and go to state 31


State 21

   16 type: T_ID OPENBRACK . CLOSEBRACK

    CLOSEBRACK  shift, and go to state 32


State 22

   10 variable: T_ID T_ID .
   19 functionDecl: T_ID T_ID . OPENPAR formals CLOSEPAR stmtBlock

    OPENPAR  shift, and go to state 33

    $default  reduce using rule 10 (variable)


State 23

    0 $accept: start $end .

    $default  accept


State 24

    2 program: program decl .

    $default  reduce using rule 2 (program)


State 25

    8 variableDecl: variable SEMICOLON .

    $default  reduce using rule 8 (variableDecl)


State 26

   15 type: type OPENBRACK . CLOSEBRACK

    CLOSEBRACK  shift, and go to state 34


State 27

    9 variable: type T_ID .
   17 functionDecl: type T_ID . OPENPAR formals CLOSEPAR stmtBlock

    OPENPAR  shift, and go to state 35

    $default  reduce using rule 9 (variable)


State 28

   18 functionDecl: VOID T_ID OPENPAR . formals CLOSEPAR stmtBlock

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 39
    variable1ToInfColon  go to state 40


State 29

   26 extendsIdent0Or1: EXTENDS . T_ID

    T_ID  shift, and go to state 41


State 30

   24 classDecl: CLASS T_ID extendsIdent0Or1 . implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE

    IMPLEMENTS  shift, and go to state 42

    $default  reduce using rule 27 (implementsIdentPlusColon0Or1)

    implementsIdentPlusColon0Or1  go to state 43


State 31

   39 interfaceDecl: INTERFACE T_ID OPENBRACE . prototype0ToInf CLOSEBRACE

    $default  reduce using rule 41 (prototype0ToInf)

    prototype0ToInf  go to state 44


State 32

   16 type: T_ID OPENBRACK CLOSEBRACK .

    $default  reduce using rule 16 (type)


State 33

   19 functionDecl: T_ID T_ID OPENPAR . formals CLOSEPAR stmtBlock

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 45
    variable1ToInfColon  go to state 40


State 34

   15 type: type OPENBRACK CLOSEBRACK .

    $default  reduce using rule 15 (type)


State 35

   17 functionDecl: type T_ID OPENPAR . formals CLOSEPAR stmtBlock

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 46
    variable1ToInfColon  go to state 40


State 36

   10 variable: T_ID . T_ID
   16 type: T_ID . OPENBRACK CLOSEBRACK

    OPENBRACK  shift, and go to state 21
    T_ID       shift, and go to state 47


State 37

   23 variable1ToInfColon: variable .

    $default  reduce using rule 23 (variable1ToInfColon)


State 38

    9 variable: type . T_ID
   15 type: type . OPENBRACK CLOSEBRACK

    OPENBRACK  shift, and go to state 26
    T_ID       shift, and go to state 48


State 39

   18 functionDecl: VOID T_ID OPENPAR formals . CLOSEPAR stmtBlock

    CLOSEPAR  shift, and go to state 49


State 40

   20 formals: variable1ToInfColon .
   22 variable1ToInfColon: variable1ToInfColon . COLON variable

    COLON  shift, and go to state 50

    $default  reduce using rule 20 (formals)


State 41

   26 extendsIdent0Or1: EXTENDS T_ID .

    $default  reduce using rule 26 (extendsIdent0Or1)


State 42

   28 implementsIdentPlusColon0Or1: IMPLEMENTS . ids1ToInfColon

    T_ID  shift, and go to state 51

    ids1ToInfColon  go to state 52


State 43

   24 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 . OPENBRACE fields0ToInf CLOSEBRACE

    OPENBRACE  shift, and go to state 53


State 44

   39 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf . CLOSEBRACE
   40 prototype0ToInf: prototype0ToInf . prototype

    VOID        shift, and go to state 54
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    CLOSEBRACE  shift, and go to state 55
    T_ID        shift, and go to state 56

    type       go to state 57
    prototype  go to state 58


State 45

   19 functionDecl: T_ID T_ID OPENPAR formals . CLOSEPAR stmtBlock

    CLOSEPAR  shift, and go to state 59


State 46

   17 functionDecl: type T_ID OPENPAR formals . CLOSEPAR stmtBlock

    CLOSEPAR  shift, and go to state 60


State 47

   10 variable: T_ID T_ID .

    $default  reduce using rule 10 (variable)


State 48

    9 variable: type T_ID .

    $default  reduce using rule 9 (variable)


State 49

   18 functionDecl: VOID T_ID OPENPAR formals CLOSEPAR . stmtBlock

    OPENBRACE  shift, and go to state 61

    stmtBlock  go to state 62


State 50

   22 variable1ToInfColon: variable1ToInfColon COLON . variable

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    variable  go to state 63
    type      go to state 38


State 51

   34 ids1ToInfColon: T_ID .

    $default  reduce using rule 34 (ids1ToInfColon)


State 52

   28 implementsIdentPlusColon0Or1: IMPLEMENTS ids1ToInfColon .
   33 ids1ToInfColon: ids1ToInfColon . COLON T_ID

    COLON  shift, and go to state 64

    $default  reduce using rule 28 (implementsIdentPlusColon0Or1)


State 53

   24 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE . fields0ToInf CLOSEBRACE

    $default  reduce using rule 30 (fields0ToInf)

    fields0ToInf  go to state 65


State 54

   43 prototype: VOID . T_ID OPENPAR formals CLOSEPAR SEMICOLON

    T_ID  shift, and go to state 66


State 55

   39 interfaceDecl: INTERFACE T_ID OPENBRACE prototype0ToInf CLOSEBRACE .

    $default  reduce using rule 39 (interfaceDecl)


State 56

   16 type: T_ID . OPENBRACK CLOSEBRACK
   44 prototype: T_ID . T_ID OPENPAR formals CLOSEPAR SEMICOLON

    OPENBRACK  shift, and go to state 21
    T_ID       shift, and go to state 67


State 57

   15 type: type . OPENBRACK CLOSEBRACK
   42 prototype: type . T_ID OPENPAR formals CLOSEPAR SEMICOLON

    OPENBRACK  shift, and go to state 26
    T_ID       shift, and go to state 68


State 58

   40 prototype0ToInf: prototype0ToInf prototype .

    $default  reduce using rule 40 (prototype0ToInf)


State 59

   19 functionDecl: T_ID T_ID OPENPAR formals CLOSEPAR . stmtBlock

    OPENBRACE  shift, and go to state 61

    stmtBlock  go to state 69


State 60

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR . stmtBlock

    OPENBRACE  shift, and go to state 61

    stmtBlock  go to state 70


State 61

   45 stmtBlock: OPENBRACE . variableDecl0ToInf stmt0ToInf CLOSEBRACE

    $default  reduce using rule 47 (variableDecl0ToInf)

    variableDecl0ToInf  go to state 71


State 62

   18 functionDecl: VOID T_ID OPENPAR formals CLOSEPAR stmtBlock .

    $default  reduce using rule 18 (functionDecl)


State 63

   22 variable1ToInfColon: variable1ToInfColon COLON variable .

    $default  reduce using rule 22 (variable1ToInfColon)


State 64

   33 ids1ToInfColon: ids1ToInfColon COLON . T_ID

    T_ID  shift, and go to state 72


State 65

   24 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf . CLOSEBRACE
   29 fields0ToInf: fields0ToInf . field

    PRIVATE     shift, and go to state 73
    PROTECTED   shift, and go to state 74
    PUBLIC      shift, and go to state 75
    CLOSEBRACE  shift, and go to state 76

    $default  reduce using rule 38 (accessMode)

    field       go to state 77
    accessMode  go to state 78


State 66

   43 prototype: VOID T_ID . OPENPAR formals CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 79


State 67

   44 prototype: T_ID T_ID . OPENPAR formals CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 80


State 68

   42 prototype: type T_ID . OPENPAR formals CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 81


State 69

   19 functionDecl: T_ID T_ID OPENPAR formals CLOSEPAR stmtBlock .

    $default  reduce using rule 19 (functionDecl)


State 70

   17 functionDecl: type T_ID OPENPAR formals CLOSEPAR stmtBlock .

    $default  reduce using rule 17 (functionDecl)


State 71

   45 stmtBlock: OPENBRACE variableDecl0ToInf . stmt0ToInf CLOSEBRACE
   46 variableDecl0ToInf: variableDecl0ToInf . variableDecl

    INT               shift, and go to state 2
    DOUBLE            shift, and go to state 3
    BOOL              shift, and go to state 4
    STRING            shift, and go to state 5
    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 106

    SEMICOLON  reduce using rule 59 (expr0Or1)
    $default   reduce using rule 49 (stmt0ToInf)

    variableDecl  go to state 107
    variable      go to state 13
    type          go to state 38
    stmtBlock     go to state 108
    stmt0ToInf    go to state 109
    stmt          go to state 110
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 72

   33 ids1ToInfColon: ids1ToInfColon COLON T_ID .

    $default  reduce using rule 33 (ids1ToInfColon)


State 73

   35 accessMode: PRIVATE .

    $default  reduce using rule 35 (accessMode)


State 74

   36 accessMode: PROTECTED .

    $default  reduce using rule 36 (accessMode)


State 75

   37 accessMode: PUBLIC .

    $default  reduce using rule 37 (accessMode)


State 76

   24 classDecl: CLASS T_ID extendsIdent0Or1 implementsIdentPlusColon0Or1 OPENBRACE fields0ToInf CLOSEBRACE .

    $default  reduce using rule 24 (classDecl)


State 77

   29 fields0ToInf: fields0ToInf field .

    $default  reduce using rule 29 (fields0ToInf)


State 78

   31 field: accessMode . variableDecl
   32      | accessMode . functionDecl

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 8

    variableDecl  go to state 123
    variable      go to state 13
    type          go to state 14
    functionDecl  go to state 124


State 79

   43 prototype: VOID T_ID OPENPAR . formals CLOSEPAR SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 125
    variable1ToInfColon  go to state 40


State 80

   44 prototype: T_ID T_ID OPENPAR . formals CLOSEPAR SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 126
    variable1ToInfColon  go to state 40


State 81

   42 prototype: type T_ID OPENPAR . formals CLOSEPAR SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 36

    $default  reduce using rule 21 (formals)

    variable             go to state 37
    type                 go to state 38
    formals              go to state 127
    variable1ToInfColon  go to state 40


State 82

  114 constant: NULL1 .

    $default  reduce using rule 114 (constant)


State 83

   77 expr: THIS .

    $default  reduce using rule 77 (expr)


State 84

   65 forStmt: FOR . OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    OPENPAR  shift, and go to state 128


State 85

   64 whileStmt: WHILE . OPENPAR expr CLOSEPAR stmt

    OPENPAR  shift, and go to state 129


State 86

   61 ifStmt: IF . OPENPAR expr CLOSEPAR stmt elseStmt0Or1

    OPENPAR  shift, and go to state 130


State 87

   66 returnStmt: RETURN . expr0Or1 SEMICOLON

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    expr0Or1  go to state 132
    expr      go to state 119
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 88

   67 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 89

   68 continueStmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 134


State 90

   97 expr: NEW . T_ID

    T_ID  shift, and go to state 135


State 91

   98 expr: NEWARRAY . OPENPAR expr COLON type CLOSEPAR
   99     | NEWARRAY . OPENPAR expr COLON T_ID CLOSEPAR

    OPENPAR  shift, and go to state 136


State 92

   69 printStmt: PRINT . OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON

    OPENPAR  shift, and go to state 137


State 93

   95 expr: READINTEGER . OPENPAR CLOSEPAR

    OPENPAR  shift, and go to state 138


State 94

   96 expr: READLINE . OPENPAR CLOSEPAR

    OPENPAR  shift, and go to state 139


State 95

  101 expr: DTOI . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 140


State 96

  100 expr: ITOD . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 141


State 97

  103 expr: BTOI . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 142


State 98

  102 expr: ITOB . OPENPAR expr CLOSEPAR

    OPENPAR  shift, and go to state 143


State 99

   85 expr: MINUS . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 144
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 100

   94 expr: EXCLAMATION . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 145
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 101

   79 expr: OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 146
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 102

  110 constant: T_INTLITERAL .

    $default  reduce using rule 110 (constant)


State 103

  111 constant: T_DOUBLELITERAL .

    $default  reduce using rule 111 (constant)


State 104

  113 constant: T_STRINGLITERAL .

    $default  reduce using rule 113 (constant)


State 105

  112 constant: T_BOOLEANLITERAL .

    $default  reduce using rule 112 (constant)


State 106

   10 variable: T_ID . T_ID
   16 type: T_ID . OPENBRACK CLOSEBRACK
   73 expr: T_ID .
   76     | T_ID . EQ expr
  106 call: T_ID . OPENPAR actuals CLOSEPAR

    EQ         shift, and go to state 147
    OPENBRACK  shift, and go to state 21
    OPENPAR    shift, and go to state 148
    T_ID       shift, and go to state 47

    $default  reduce using rule 73 (expr)


State 107

   46 variableDecl0ToInf: variableDecl0ToInf variableDecl .

    $default  reduce using rule 46 (variableDecl0ToInf)


State 108

   58 stmt: stmtBlock .

    $default  reduce using rule 58 (stmt)


State 109

   45 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf . CLOSEBRACE

    CLOSEBRACE  shift, and go to state 149


State 110

   48 stmt0ToInf: stmt . stmt0ToInf

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    SEMICOLON  reduce using rule 59 (expr0Or1)
    $default   reduce using rule 49 (stmt0ToInf)

    stmtBlock     go to state 108
    stmt0ToInf    go to state 150
    stmt          go to state 110
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 111

   50 stmt: expr0Or1 . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 112

   51 stmt: ifStmt .

    $default  reduce using rule 51 (stmt)


State 113

   52 stmt: whileStmt .

    $default  reduce using rule 52 (stmt)


State 114

   53 stmt: forStmt .

    $default  reduce using rule 53 (stmt)


State 115

   56 stmt: returnStmt .

    $default  reduce using rule 56 (stmt)


State 116

   54 stmt: breakStmt .

    $default  reduce using rule 54 (stmt)


State 117

   55 stmt: continueStmt .

    $default  reduce using rule 55 (stmt)


State 118

   57 stmt: printStmt .

    $default  reduce using rule 57 (stmt)


State 119

   60 expr0Or1: expr .
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 60 (expr0Or1)


State 120

   72 expr: lValue .
   75     | lValue . EQ expr

    EQ  shift, and go to state 167

    $default  reduce using rule 72 (expr)


State 121

   78 expr: call .

    $default  reduce using rule 78 (expr)


State 122

   74 expr: constant .

    $default  reduce using rule 74 (expr)


State 123

   31 field: accessMode variableDecl .

    $default  reduce using rule 31 (field)


State 124

   32 field: accessMode functionDecl .

    $default  reduce using rule 32 (field)


State 125

   43 prototype: VOID T_ID OPENPAR formals . CLOSEPAR SEMICOLON

    CLOSEPAR  shift, and go to state 168


State 126

   44 prototype: T_ID T_ID OPENPAR formals . CLOSEPAR SEMICOLON

    CLOSEPAR  shift, and go to state 169


State 127

   42 prototype: type T_ID OPENPAR formals . CLOSEPAR SEMICOLON

    CLOSEPAR  shift, and go to state 170


State 128

   65 forStmt: FOR OPENPAR . expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    expr0Or1  go to state 171
    expr      go to state 119
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 129

   64 whileStmt: WHILE OPENPAR . expr CLOSEPAR stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 172
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 130

   61 ifStmt: IF OPENPAR . expr CLOSEPAR stmt elseStmt0Or1

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 173
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 131

   73 expr: T_ID .
   76     | T_ID . EQ expr
  106 call: T_ID . OPENPAR actuals CLOSEPAR

    EQ       shift, and go to state 147
    OPENPAR  shift, and go to state 148

    $default  reduce using rule 73 (expr)


State 132

   66 returnStmt: RETURN expr0Or1 . SEMICOLON

    SEMICOLON  shift, and go to state 174


State 133

   67 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 67 (breakStmt)


State 134

   68 continueStmt: CONTINUE SEMICOLON .

    $default  reduce using rule 68 (continueStmt)


State 135

   97 expr: NEW T_ID .

    $default  reduce using rule 97 (expr)


State 136

   98 expr: NEWARRAY OPENPAR . expr COLON type CLOSEPAR
   99     | NEWARRAY OPENPAR . expr COLON T_ID CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 175
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 137

   69 printStmt: PRINT OPENPAR . expr1ToInfColon CLOSEPAR SEMICOLON

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr1ToInfColon  go to state 176
    expr             go to state 177
    lValue           go to state 120
    call             go to state 121
    constant         go to state 122


State 138

   95 expr: READINTEGER OPENPAR . CLOSEPAR

    CLOSEPAR  shift, and go to state 178


State 139

   96 expr: READLINE OPENPAR . CLOSEPAR

    CLOSEPAR  shift, and go to state 179


State 140

  101 expr: DTOI OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 180
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 141

  100 expr: ITOD OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 181
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 142

  103 expr: BTOI OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 182
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 143

  102 expr: ITOB OPENPAR . expr CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 183
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 144

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   85     | MINUS expr .
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 85 (expr)


State 145

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
   94     | EXCLAMATION expr .
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 94 (expr)


State 146

   79 expr: OPENPAR expr . CLOSEPAR
   80     | expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 184


State 147

   76 expr: T_ID EQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 185
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 148

  106 call: T_ID OPENPAR . actuals CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 109 (actuals)

    expr1ToInfColon  go to state 186
    expr             go to state 177
    lValue           go to state 120
    call             go to state 121
    actuals          go to state 187
    constant         go to state 122


State 149

   45 stmtBlock: OPENBRACE variableDecl0ToInf stmt0ToInf CLOSEBRACE .

    $default  reduce using rule 45 (stmtBlock)


State 150

   48 stmt0ToInf: stmt stmt0ToInf .

    $default  reduce using rule 48 (stmt0ToInf)


State 151

   50 stmt: expr0Or1 SEMICOLON .

    $default  reduce using rule 50 (stmt)


State 152

   89 expr: expr GEQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 188
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 153

   87 expr: expr LEQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 189
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 154

   88 expr: expr GR . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 190
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 155

   86 expr: expr LE . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 191
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 156

   83 expr: expr SLASH . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 192
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 157

   80 expr: expr PLUS . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 193
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 158

   81 expr: expr MINUS . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 194
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 159

   82 expr: expr MUL . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 195
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 160

   84 expr: expr PERCENT . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 196
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 161

   90 expr: expr CHECKEQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 197
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 162

   91 expr: expr CHECKNOTEQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 198
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 163

   93 expr: expr OR . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 199
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 164

   92 expr: expr AND . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 200
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 165

  104 lValue: expr DOT . T_ID
  107 call: expr DOT . T_ID OPENPAR actuals CLOSEPAR

    T_ID  shift, and go to state 201


State 166

  105 lValue: expr OPENBRACK . expr CLOSEBRACK

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 202
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 167

   75 expr: lValue EQ . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 203
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 168

   43 prototype: VOID T_ID OPENPAR formals CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 204


State 169

   44 prototype: T_ID T_ID OPENPAR formals CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 170

   42 prototype: type T_ID OPENPAR formals CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 206


State 171

   65 forStmt: FOR OPENPAR expr0Or1 . SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt

    SEMICOLON  shift, and go to state 207


State 172

   64 whileStmt: WHILE OPENPAR expr . CLOSEPAR stmt
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 208


State 173

   61 ifStmt: IF OPENPAR expr . CLOSEPAR stmt elseStmt0Or1
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 209


State 174

   66 returnStmt: RETURN expr0Or1 SEMICOLON .

    $default  reduce using rule 66 (returnStmt)


State 175

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
   98     | NEWARRAY OPENPAR expr . COLON type CLOSEPAR
   99     | NEWARRAY OPENPAR expr . COLON T_ID CLOSEPAR
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    COLON       shift, and go to state 210
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166


State 176

   69 printStmt: PRINT OPENPAR expr1ToInfColon . CLOSEPAR SEMICOLON
   70 expr1ToInfColon: expr1ToInfColon . COLON expr

    COLON     shift, and go to state 211
    CLOSEPAR  shift, and go to state 212


State 177

   71 expr1ToInfColon: expr .
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 71 (expr1ToInfColon)


State 178

   95 expr: READINTEGER OPENPAR CLOSEPAR .

    $default  reduce using rule 95 (expr)


State 179

   96 expr: READLINE OPENPAR CLOSEPAR .

    $default  reduce using rule 96 (expr)


State 180

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  101     | DTOI OPENPAR expr . CLOSEPAR
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 213


State 181

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  100     | ITOD OPENPAR expr . CLOSEPAR
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 214


State 182

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  103     | BTOI OPENPAR expr . CLOSEPAR
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 215


State 183

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  102     | ITOB OPENPAR expr . CLOSEPAR
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEPAR    shift, and go to state 216


State 184

   79 expr: OPENPAR expr CLOSEPAR .

    $default  reduce using rule 79 (expr)


State 185

   76 expr: T_ID EQ expr .
   80     | expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 76 (expr)


State 186

   70 expr1ToInfColon: expr1ToInfColon . COLON expr
  108 actuals: expr1ToInfColon .

    COLON  shift, and go to state 211

    $default  reduce using rule 108 (actuals)


State 187

  106 call: T_ID OPENPAR actuals . CLOSEPAR

    CLOSEPAR  shift, and go to state 217


State 188

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   89     | expr GEQ expr .
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GR   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 89 (expr)


State 189

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   87     | expr LEQ expr .
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GR   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 87 (expr)


State 190

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   88     | expr GR expr .
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GR   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 88 (expr)


State 191

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   86     | expr LE expr .
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GR   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 86 (expr)


State 192

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   83     | expr SLASH expr .
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 83 (expr)


State 193

   80 expr: expr . PLUS expr
   80     | expr PLUS expr .
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 80 (expr)


State 194

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   81     | expr MINUS expr .
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 81 (expr)


State 195

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   82     | expr MUL expr .
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 82 (expr)


State 196

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   84     | expr PERCENT expr .
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    SLASH      shift, and go to state 156
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 84 (expr)


State 197

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   90     | expr CHECKEQ expr .
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ        shift, and go to state 152
    LEQ        shift, and go to state 153
    GR         shift, and go to state 154
    LE         shift, and go to state 155
    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 90 (expr)


State 198

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   91     | expr CHECKNOTEQ expr .
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ        shift, and go to state 152
    LEQ        shift, and go to state 153
    GR         shift, and go to state 154
    LE         shift, and go to state 155
    SLASH      shift, and go to state 156
    PLUS       shift, and go to state 157
    MINUS      shift, and go to state 158
    MUL        shift, and go to state 159
    PERCENT    shift, and go to state 160
    DOT        shift, and go to state 165
    OPENBRACK  shift, and go to state 166

    $default  reduce using rule 91 (expr)


State 199

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
   93     | expr OR expr .
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 93 (expr)


State 200

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   92     | expr AND expr .
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 92 (expr)


State 201

  104 lValue: expr DOT T_ID .
  107 call: expr DOT T_ID . OPENPAR actuals CLOSEPAR

    OPENPAR  shift, and go to state 218

    $default  reduce using rule 104 (lValue)


State 202

   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  105       | expr OPENBRACK expr . CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166
    CLOSEBRACK  shift, and go to state 219


State 203

   75 expr: lValue EQ expr .
   80     | expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 75 (expr)


State 204

   43 prototype: VOID T_ID OPENPAR formals CLOSEPAR SEMICOLON .

    $default  reduce using rule 43 (prototype)


State 205

   44 prototype: T_ID T_ID OPENPAR formals CLOSEPAR SEMICOLON .

    $default  reduce using rule 44 (prototype)


State 206

   42 prototype: type T_ID OPENPAR formals CLOSEPAR SEMICOLON .

    $default  reduce using rule 42 (prototype)


State 207

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON . expr SEMICOLON expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 220
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 208

   64 whileStmt: WHILE OPENPAR expr CLOSEPAR . stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    stmtBlock     go to state 108
    stmt          go to state 221
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 209

   61 ifStmt: IF OPENPAR expr CLOSEPAR . stmt elseStmt0Or1

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    stmtBlock     go to state 108
    stmt          go to state 222
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 210

   98 expr: NEWARRAY OPENPAR expr COLON . type CLOSEPAR
   99     | NEWARRAY OPENPAR expr COLON . T_ID CLOSEPAR

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    T_ID    shift, and go to state 223

    type  go to state 224


State 211

   70 expr1ToInfColon: expr1ToInfColon COLON . expr

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    expr      go to state 225
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 212

   69 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR . SEMICOLON

    SEMICOLON  shift, and go to state 226


State 213

  101 expr: DTOI OPENPAR expr CLOSEPAR .

    $default  reduce using rule 101 (expr)


State 214

  100 expr: ITOD OPENPAR expr CLOSEPAR .

    $default  reduce using rule 100 (expr)


State 215

  103 expr: BTOI OPENPAR expr CLOSEPAR .

    $default  reduce using rule 103 (expr)


State 216

  102 expr: ITOB OPENPAR expr CLOSEPAR .

    $default  reduce using rule 102 (expr)


State 217

  106 call: T_ID OPENPAR actuals CLOSEPAR .

    $default  reduce using rule 106 (call)


State 218

  107 call: expr DOT T_ID OPENPAR . actuals CLOSEPAR

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 109 (actuals)

    expr1ToInfColon  go to state 186
    expr             go to state 177
    lValue           go to state 120
    call             go to state 121
    actuals          go to state 227
    constant         go to state 122


State 219

  105 lValue: expr OPENBRACK expr CLOSEBRACK .

    $default  reduce using rule 105 (lValue)


State 220

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr . SEMICOLON expr0Or1 CLOSEPAR stmt
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    SEMICOLON   shift, and go to state 228
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166


State 221

   64 whileStmt: WHILE OPENPAR expr CLOSEPAR stmt .

    $default  reduce using rule 64 (whileStmt)


State 222

   61 ifStmt: IF OPENPAR expr CLOSEPAR stmt . elseStmt0Or1

    ELSE  shift, and go to state 229

    $default  reduce using rule 62 (elseStmt0Or1)

    elseStmt0Or1  go to state 230


State 223

   16 type: T_ID . OPENBRACK CLOSEBRACK
   99 expr: NEWARRAY OPENPAR expr COLON T_ID . CLOSEPAR

    OPENBRACK  shift, and go to state 21
    CLOSEPAR   shift, and go to state 231


State 224

   15 type: type . OPENBRACK CLOSEBRACK
   98 expr: NEWARRAY OPENPAR expr COLON type . CLOSEPAR

    OPENBRACK  shift, and go to state 26
    CLOSEPAR   shift, and go to state 232


State 225

   70 expr1ToInfColon: expr1ToInfColon COLON expr .
   80 expr: expr . PLUS expr
   81     | expr . MINUS expr
   82     | expr . MUL expr
   83     | expr . SLASH expr
   84     | expr . PERCENT expr
   86     | expr . LE expr
   87     | expr . LEQ expr
   88     | expr . GR expr
   89     | expr . GEQ expr
   90     | expr . CHECKEQ expr
   91     | expr . CHECKNOTEQ expr
   92     | expr . AND expr
   93     | expr . OR expr
  104 lValue: expr . DOT T_ID
  105       | expr . OPENBRACK expr CLOSEBRACK
  107 call: expr . DOT T_ID OPENPAR actuals CLOSEPAR

    GEQ         shift, and go to state 152
    LEQ         shift, and go to state 153
    GR          shift, and go to state 154
    LE          shift, and go to state 155
    SLASH       shift, and go to state 156
    PLUS        shift, and go to state 157
    MINUS       shift, and go to state 158
    MUL         shift, and go to state 159
    PERCENT     shift, and go to state 160
    CHECKEQ     shift, and go to state 161
    CHECKNOTEQ  shift, and go to state 162
    OR          shift, and go to state 163
    AND         shift, and go to state 164
    DOT         shift, and go to state 165
    OPENBRACK   shift, and go to state 166

    $default  reduce using rule 70 (expr1ToInfColon)


State 226

   69 printStmt: PRINT OPENPAR expr1ToInfColon CLOSEPAR SEMICOLON .

    $default  reduce using rule 69 (printStmt)


State 227

  107 call: expr DOT T_ID OPENPAR actuals . CLOSEPAR

    CLOSEPAR  shift, and go to state 233


State 228

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON . expr0Or1 CLOSEPAR stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    expr0Or1  go to state 234
    expr      go to state 119
    lValue    go to state 120
    call      go to state 121
    constant  go to state 122


State 229

   63 elseStmt0Or1: ELSE . stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    stmtBlock     go to state 108
    stmt          go to state 235
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 230

   61 ifStmt: IF OPENPAR expr CLOSEPAR stmt elseStmt0Or1 .

    $default  reduce using rule 61 (ifStmt)


State 231

   99 expr: NEWARRAY OPENPAR expr COLON T_ID CLOSEPAR .

    $default  reduce using rule 99 (expr)


State 232

   98 expr: NEWARRAY OPENPAR expr COLON type CLOSEPAR .

    $default  reduce using rule 98 (expr)


State 233

  107 call: expr DOT T_ID OPENPAR actuals CLOSEPAR .

    $default  reduce using rule 107 (call)


State 234

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 . CLOSEPAR stmt

    CLOSEPAR  shift, and go to state 236


State 235

   63 elseStmt0Or1: ELSE stmt .

    $default  reduce using rule 63 (elseStmt0Or1)


State 236

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR . stmt

    NULL1             shift, and go to state 82
    THIS              shift, and go to state 83
    FOR               shift, and go to state 84
    WHILE             shift, and go to state 85
    IF                shift, and go to state 86
    RETURN            shift, and go to state 87
    BREAK             shift, and go to state 88
    CONTINUE          shift, and go to state 89
    NEW               shift, and go to state 90
    NEWARRAY          shift, and go to state 91
    PRINT             shift, and go to state 92
    READINTEGER       shift, and go to state 93
    READLINE          shift, and go to state 94
    DTOI              shift, and go to state 95
    ITOD              shift, and go to state 96
    BTOI              shift, and go to state 97
    ITOB              shift, and go to state 98
    MINUS             shift, and go to state 99
    EXCLAMATION       shift, and go to state 100
    OPENPAR           shift, and go to state 101
    OPENBRACE         shift, and go to state 61
    T_INTLITERAL      shift, and go to state 102
    T_DOUBLELITERAL   shift, and go to state 103
    T_STRINGLITERAL   shift, and go to state 104
    T_BOOLEANLITERAL  shift, and go to state 105
    T_ID              shift, and go to state 131

    $default  reduce using rule 59 (expr0Or1)

    stmtBlock     go to state 108
    stmt          go to state 237
    expr0Or1      go to state 111
    ifStmt        go to state 112
    whileStmt     go to state 113
    forStmt       go to state 114
    returnStmt    go to state 115
    breakStmt     go to state 116
    continueStmt  go to state 117
    printStmt     go to state 118
    expr          go to state 119
    lValue        go to state 120
    call          go to state 121
    constant      go to state 122


State 237

   65 forStmt: FOR OPENPAR expr0Or1 SEMICOLON expr SEMICOLON expr0Or1 CLOSEPAR stmt .

    $default  reduce using rule 65 (forStmt)
